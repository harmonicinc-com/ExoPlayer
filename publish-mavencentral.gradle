task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
}

apply plugin: 'maven-publish'
apply plugin: 'signing'

ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''
ext["sonatypeStagingProfileId"] = ''
ext["buildNumber"] = ''

println "Loading env vars"
ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
ext["signing.password"] = System.getenv('SIGNING_PASSWORD')
ext["signing.secretKeyRingFile"] = System.getenv('SIGNING_SECRET_KEY_RING_FILE')
ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME')
ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD')
ext["sonatypeStagingProfileId"] = System.getenv('SONATYPE_STAGING_PROFILE_ID')
ext["buildNumber"] = System.getenv('BUILD_NUMBER')

nexusStaging {
    serverUrl = 'https://s01.oss.sonatype.org/service/local/'
    packageGroup = 'com.github.harmonicinc-com'
    stagingProfileId = sonatypeStagingProfileId
    username = ossrhUsername
    password = ossrhPassword
}

publishing {
    publications {
        release(MavenPublication) {
            groupId 'com.github.harmonicinc-com'
            artifactId releaseArtifact
            version "$releaseVersion.$buildNumber"
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            artifact androidSourcesJar

            pom {
                name = releaseArtifact
                description = releaseDescription
                url = 'https://github.com/harmonicinc-com/ExoPlayer'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'harmonicinc-jigsaw'
                        name = 'Albert Cheung'
                        email = 'albert.cheung@harmonicinc.com'
                    }
                }
                scm {
                    connection = 'scm:git:github.com/harmonicinc-com/ExoPlayer.git'
                    developerConnection = 'scm:git:ssh://github.com/harmonicinc-com/ExoPlayer.git'
                    url = 'https://github.com/harmonicinc-com/ExoPlayer'
                }
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    project.configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        def patchedArtifactId = it.name.replace("library", "exoplayer").replace("testutils", "exoplayer-testutils")

                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.group.contentEquals("com.github.harmonicinc-com")?patchedArtifactId:it.name)
                        dependencyNode.appendNode('version', it.group.contentEquals("com.github.harmonicinc-com")?"$releaseVersion.$buildNumber":it.version)
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "sonatype"

            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications
}